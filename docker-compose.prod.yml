version: "3.9"

services:
  db:
    container_name: mysql
    build:
      context: .
      dockerfile: containers/mysql/Dockerfile
    platform: linux/x86_64
    volumes:
      - db_data:/var/lib/mysql
    env_file:
      - .env.prod
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
  app:
    container_name: app
    build:
      context: .
      dockerfile: containers/django/Dockerfile
    volumes:
      - ./project/django:/django
      - ./static:/static
      - ./project/react/build:/build
    expose:
      - "8000"
    command: sh -c "/django/entrypoint.sh"
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
  web:
    container_name: web
    build:
      context: .
      dockerfile: containers/nginx/Dockerfile
    volumes:
      - ./static:/static
    env_file:
      - .env.prod
    ports:
      - "80:80"
    depends_on:
      - app
    command: /bin/sh -c "envsubst '$$AWS_STORAGE_BUCKET_NAME'< /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  node:
    container_name: node
    build:
      context: .
      dockerfile: containers/node/Dockerfile
    volumes:
      - ./project/react:/react
    working_dir: /react
    ports:
      - 3000:3000
    command: sh -c "/react/entrypoint.sh"
    env_file:
      - .env.prod
    tty: true
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      app:
        condition: service_started
volumes:
  db_data:
  static: